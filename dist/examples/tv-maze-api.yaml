openapi: "3.0.2"

info:
  title: "TV Maze API"
  description: "Пример редактирования текста"
  version: "1.0"

externalDocs:
  description: "Оригинальное описание API"
  url: "http://www.tvmaze.com/api"

servers:
  - url: https://api.tvmaze.com
    description: Prod

paths:
  /search/shows:
    get:
      tags:
        - "Search"
      summary: "Поиск шоу"
      description: "Поиск по всем шоу в нашей базе данных по названию шоу. Используется нечеткий алгоритм (со значением нечеткости 2), что означает, что шоу будут найдены, даже если ваш запрос содержит небольшие опечатки. Результаты отображаются в порядке релевантности (лучшие совпадения вверху) и содержат полную информацию о каждом шоу.\n\n
        Наиболее распространенный вариант использования этой конечной точки - это когда вы создаете локальное сопоставление названий шоу с идентификаторами TVmaze и хотите убедиться, что вы сопоставляете их с точно правильным шоу, а не с другим шоу, которое имеет такой же имя. Представляя основную информацию о каждом шоу в пользовательском интерфейсе, вы можете позволить конечному пользователю выбрать конкретную запись из этого списка, а ваше приложение сохранит идентификатор или URL-адрес выбранного шоу. Любые последующие запросы информации об этом шоу можно будет направить напрямую по URL-адресу этого шоу.
      "
      parameters:
        - $ref: '#/components/parameters/q'

      responses:
        200:
          description: "Успешный ответ"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200'

  /singlesearch/shows:
    get:
      tags:
        - "Search"
      summary: "Поиск первого шоу"
      description: "Тоже самое что и */search/shows* только возвращает один объект или ничего.\n\n
        В отличие от */search/*, endpoint */singlesearch/* позволяет встраивать дополнительную информацию в результат. См. Раздел «Встраивание» для получения дополнительной информации.
      "
      parameters:
        - $ref: '#/components/parameters/q'

      responses:
        200:
          description: "Успешный ответ"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200'

  /lookup/shows:
    get:
      tags:
        - "Search"
      summary: "Поиск по tvrage, thetvdb или IMDB ID"
      description: ""
      parameters:
        - $ref: '#/components/parameters/imdb'

      responses:
        200:
          description: "Успешный ответ"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200'

components:
  parameters:
    q:
      name: q
      in: query
      example: "The Boys"
      description: "**Поисковая строка**"
      schema:
        type: string
    imdb:
      name: imdb
      in: query
      example: "tt1190634"
      description: "**IMDB ID**"
      schema:
        type: string

  schemas:
    200:
      title: "Пример"
      type: object